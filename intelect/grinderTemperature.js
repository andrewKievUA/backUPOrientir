const snap7 = require('node-snap7');
const client = new snap7.S7Client();

const sourceIP = '192.168.10.145';
const sourceDB = 201;
const startOffset = 2;
const endOffset = 38;
const dataSize = endOffset - startOffset + 4; // 38 –±–∞–π—Ç

const labels = [
  '–ì–ª–∞–≤–Ω—ã–π —Ä–µ–¥—É–∫—Ç–æ—Ä ¬∞C',
  '–ü–æ–¥—à–∏–ø–Ω–∏–∫ –ø—Ä–∏–≤–æ–¥–∞ ¬∞C',
  '–ü–æ–¥—à–∏–ø–Ω–∏–∫ –±–µ–∑ –ø—Ä–∏–≤–æ–¥–∞ ¬∞C',
  '–û–±–º–æ—Ç–∫–∞ 1 ¬∞C',
  '–û–±–º–æ—Ç–∫–∞ 2 ¬∞C',
  '–û–±–º–æ—Ç–∫–∞ 3 ¬∞C',
  '–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—à–∏–ø–Ω–∏–∫ ¬∞C',
  '–ü–ª–∞–≤–∞—é—â–∏–π –ø–æ–¥—à–∏–ø–Ω–∏–∫ ¬∞C',
  '–ú–æ—â–Ω–æ—Å—Ç—å –∫–í—Ç',
  '–¢–æ–∫ –ê'
];

function readData() {
  client.ConnectTo(sourceIP, 0, 2, (err) => {
    if (err) return console.error(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${client.ErrorText(err)}`);

    client.DBRead(sourceDB, startOffset, dataSize, (err, res) => {
      client.Disconnect();
      if (err) return console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: ${client.ErrorText(err)}`);

      console.log('üìä –î–∞–Ω–Ω—ã–µ —Å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞:');
      for (let i = 0; i < labels.length; i++) {
        const value = res.readFloatBE(i * 4).toFixed(2);
        console.log(`${labels[i]}: ${value}`);
      }
    });
  });
}

readData();
